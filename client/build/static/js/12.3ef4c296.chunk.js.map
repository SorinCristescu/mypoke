{"version":3,"sources":["assets/images/japan.svg","assets/images/china.svg","assets/images/uk.svg","assets/images/france.svg","pages/register/styles.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","pages/register/index.js"],"names":["makeStyles","root","width","display","flexDirection","alignItems","justifyContent","padding","form","height","marginTop","flag","paddingTop","logo","margin","redirect","legend","language","FormControlLabel","React","props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","concat","capitalize","Typography","component","withStyles","theme","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","color","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","position","opacity","top","left","zIndex","createSvgIcon","d","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","easeIn","fontSize","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","_props$color","nameProp","onChangeProp","_props$size","size","radioGroup","createChainedFunction","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","Register","useStyles","dispatch","useDispatch","isAuthenticated","useSelector","auth","user","useState","email","password","confirmedPassword","postData","setPostData","showPassword","setShowPassword","handleSubmit","e","a","preventDefault","console","log","setAlert","newUser","register","handleChange","handleClickShowPassword","handleMouseDownPassword","to","src","Logo","alt","variant","autoComplete","noValidate","onSubmit","TextField","textField","fullWidth","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","aria-label","onClick","onMouseDown","edge","labelWidth","fieldset","FormLabel","focused","EnglishFlag","ChinaFlag","JapanFlag","FrenchFlag","message","Button","buttonSubmit","link"],"mappings":"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","file":"static/js/12.3ef4c296.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/japan.ef78e70c.svg\";","export default __webpack_public_path__ + \"static/media/china.64c26ba2.svg\";","export default __webpack_public_path__ + \"static/media/uk.91a2a59c.svg\";","export default __webpack_public_path__ + \"static/media/france.8df3c839.svg\";","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"20px 0\",\n  },\n  form: {\n    width: \"350px\",\n    height: \"500px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"10px\",\n    marginTop: \"20px\",\n  },\n\n  flag: {\n    width: \"25px\",\n    height: \"25px\",\n    paddingTop: \"8px\",\n  },\n  logo: {\n    width: \"60px\",\n    height: \"auto\",\n    paddingTop: \"20px 0\",\n    margin: \"20px 0 10px 0\",\n  },\n  redirect: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  legend: {\n    width: \"100%\",\n    marginTop: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  language: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../../redux/auth/actions\";\n\nimport { setAlert } from \"../../redux/alert/actions\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport JapanFlag from \"../../assets/images/japan.svg\";\nimport ChinaFlag from \"../../assets/images/china.svg\";\nimport EnglishFlag from \"../../assets/images/uk.svg\";\nimport FrenchFlag from \"../../assets/images/france.svg\";\nimport Logo from \"../../assets/images/pikachu.svg\";\n\n// Styles\nimport useStyles from \"./styles\";\nimport clsx from \"clsx\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst Register = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const user = useSelector((state) => state.auth.user);\n  const [postData, setPostData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmedPassword: \"\",\n    language: \"english\",\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmedPassword) {\n      console.log(\"Password do not match\");\n      dispatch(setAlert(\"Passwords do not match!\", \"error\", true));\n    } else {\n      const newUser = {\n        name,\n        email,\n        password,\n        language,\n      };\n      dispatch(register(newUser));\n      setPostData({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmedPassword: \"\",\n        language: \"english\",\n      });\n    }\n  };\n\n  const handleChange = (e) => {\n    setPostData({\n      ...postData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (e) => {\n    e.preventDefault();\n  };\n\n  const { name, email, password, confirmedPassword, language } = postData;\n\n  // Redirect if logged in\n  if (isAuthenticated && user !== null) {\n    return <Redirect to=\"/pokemons\" />;\n  }\n  return (\n    <>\n      <div className={classes.root}>\n        <img className={classes.logo} src={Logo} alt=\"logo\" />\n        <Typography variant=\"h6\">Wellcome to MyPoke</Typography>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          className={classes.form}\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            className={classes.textField}\n            name=\"name\"\n            variant=\"outlined\"\n            label=\"Name\"\n            fullWidth\n            value={name}\n            onChange={handleChange}\n          />\n          <TextField\n            name=\"email\"\n            variant=\"outlined\"\n            label=\"Email\"\n            fullWidth\n            value={email}\n            onChange={handleChange}\n          />\n          <FormControl\n            className={clsx(classes.margin, classes.textField)}\n            variant=\"outlined\"\n            fullWidth\n          >\n            <InputLabel htmlFor=\"outlined-adornment-password\">\n              Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={showPassword ? \"text\" : \"password\"}\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n          <FormControl\n            className={clsx(classes.margin, classes.textField)}\n            variant=\"outlined\"\n            fullWidth\n          >\n            <InputLabel htmlFor=\"outlined-adornment-confirmedpassword\">\n              Confirmed\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-confirmedpassword\"\n              type={showPassword ? \"text\" : \"password\"}\n              name=\"confirmedPassword\"\n              value={confirmedPassword}\n              onChange={handleChange}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n            <div className={classes.fieldset}>\n              <FormLabel\n                component=\"legend\"\n                focused={false}\n                className={classes.legend}\n              >\n                Please choose your language.\n              </FormLabel>\n              <div className={classes.language}>\n                <FormControlLabel\n                  name=\"language\"\n                  value=\"english\"\n                  control={\n                    <Radio\n                      checked={language === \"english\"}\n                      color=\"primary\"\n                      onChange={handleChange}\n                    />\n                  }\n                  labelPlacement=\"top\"\n                  label={\n                    <img\n                      className={classes.flag}\n                      src={EnglishFlag}\n                      alt=\"flag\"\n                    />\n                  }\n                />\n                <FormControlLabel\n                  name=\"language\"\n                  value=\"chinese\"\n                  control={\n                    <Radio\n                      checked={language === \"chinese\"}\n                      color=\"primary\"\n                      onChange={handleChange}\n                    />\n                  }\n                  labelPlacement=\"top\"\n                  label={\n                    <img className={classes.flag} src={ChinaFlag} alt=\"flag\" />\n                  }\n                ></FormControlLabel>\n                <FormControlLabel\n                  name=\"language\"\n                  value=\"japanese\"\n                  control={\n                    <Radio\n                      checked={language === \"japanese\"}\n                      color=\"primary\"\n                      onChange={handleChange}\n                    />\n                  }\n                  labelPlacement=\"top\"\n                  label={\n                    <img className={classes.flag} src={JapanFlag} alt=\"flag\" />\n                  }\n                ></FormControlLabel>\n                <FormControlLabel\n                  name=\"language\"\n                  value=\"french\"\n                  control={\n                    <Radio\n                      checked={language === \"french\"}\n                      color=\"primary\"\n                      onChange={handleChange}\n                    />\n                  }\n                  labelPlacement=\"top\"\n                  label={\n                    <img className={classes.flag} src={FrenchFlag} alt=\"flag\" />\n                  }\n                ></FormControlLabel>\n              </div>\n            </div>\n          </FormControl>\n          <Typography variant=\"p\" component=\"p\" className={classes.message}>\n            Register your new account\n          </Typography>\n          <Button\n            className={classes.buttonSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            fullWidth\n          >\n            Register\n          </Button>\n          <div className={classes.redirect}>\n            <Typography variant=\"p\" component=\"p\">\n              If you have an account.\n            </Typography>\n            <Link className={classes.link} to=\"/login\">\n              Login in your account!\n            </Link>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}