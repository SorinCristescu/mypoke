{"version":3,"sources":["redux/user/actions.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","components/card/styles.js","components/card/index.js","components/list/styles.js","components/list/index.js","pages/pokeboard/styles.js","pages/pokeboard/index.js"],"names":["createAndUpdatePokeboard","dispatch","a","axios","post","process","response","type","CREATE_AND_UPDATE_POKEBOARD_SUCCESS","payload","data","errors","forEach","error","setAlert","msg","CREATE_AND_UPDATE_POKEBOARD_FAIL","addPokemon","pokemon","config","headers","body","JSON","stringify","put","ADD_POKEMON_SUCCESS","ADD_POKEMON_FAIL","deletePokemon","pokemonId","delete","DELETE_POKEMON_SUCCESS","DELETE_POKEMON_FAIL","getPokemon","get","GET_POKEMON_SUCCESS","GET_POKEMON_FAIL","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","displayInline","displayBlock","name","makeStyles","maxWidth","media","backgroundSize","cardAction","justifyContent","CardItem","useStyles","item","_id","urlImage","useDispatch","Card","to","CardActionArea","CardMedia","image","CardContent","CardActions","path","Fab","size","onClick","e","aria-label","mainContainer","alignItems","smMargin","spacing","actionDiv","List","list","length","Grid","container","map","index","xs","sm","md","paddingTop","flexDirection","Pokeboard","loading","useSelector","state","user","pokeboard","match","useEffect","pokemons","Grow","in","Container","justify"],"mappings":"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","file":"static/js/7.f96d9fdd.chunk.js","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './../alert/actions';\n\nimport {\n  CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n  CREATE_AND_UPDATE_POKEBOARD_FAIL,\n  ADD_POKEMON_SUCCESS,\n  ADD_POKEMON_FAIL,\n  DELETE_POKEMON_SUCCESS,\n  DELETE_POKEMON_FAIL,\n  GET_POKEMON_SUCCESS,\n  GET_POKEMON_FAIL,\n} from './types';\n\n// Create & update user pokeboard.\nexport const createAndUpdatePokeboard = () => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${process.env.REACT_APP_API_URL}/pokeboard`\n    );\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_FAIL,\n    });\n  }\n};\n\n// Add pokemon to user pokeboard.\nexport const addPokemon = (pokemon) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify(pokemon);\n  try {\n    const response = await axios.put(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons`,\n      body,\n      config\n    );\n    dispatch({\n      type: ADD_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully added!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: ADD_POKEMON_FAIL,\n    });\n  }\n};\n\n// Delete pokemon from user pokeboard.\nexport const deletePokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.delete(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: DELETE_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully deleted!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: DELETE_POKEMON_FAIL,\n    });\n  }\n};\n\n// Get pokemon details.\nexport const getPokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: GET_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: GET_POKEMON_FAIL,\n    });\n  }\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    margin: '20px',\n    height: 140,\n    backgroundSize: 'contain',\n  },\n  cardAction: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addPokemon, deletePokemon } from '../../redux/user/actions';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport useStyles from './styles';\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n\n  const { _id, name, urlImage } = props.item;\n\n  const dispatch = useDispatch();\n  const handleAddPokemon = (e) => {\n    dispatch(addPokemon(props.item));\n  };\n  const handleDeletePokemon = (e) => {\n    dispatch(deletePokemon(props.item));\n  };\n  return (\n    <Card className={classes.root}>\n      <Link to={`/pokemon/${_id}`}>\n        <CardActionArea>\n          <CardMedia className={classes.media} image={urlImage} />\n          <CardContent>\n            <Typography gutterBottom align=\"center\" variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Typography\n              gutterBottom\n              variant=\"body1\"\n              align=\"center\"\n              component=\"p\"\n            >\n              See details\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Link>\n      <CardActions className={classes.cardAction}>\n        {props.path === '/pokemons' ? (\n          <Fab\n            size=\"medium\"\n            color=\"primary\"\n            onClick={handleAddPokemon}\n            aria-label=\"add\"\n          >\n            <AddIcon />\n          </Fab>\n        ) : (\n          <Fab\n            size=\"medium\"\n            color=\"secondary\"\n            onClick={handleDeletePokemon}\n            aria-label=\"add\"\n          >\n            <DeleteIcon />\n          </Fab>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nCardItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default CardItem;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CardItem from '../card';\nimport Loader from '../loader';\nimport useStyles from './styles';\n\nconst List = (props) => {\n  const classes = useStyles();\n  const { path, list } = props;\n  return !list.length ? (\n    <Loader />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {list.map((item, index) => (\n        <Grid key={index} item xs={12} sm={6} md={3}>\n          <CardItem item={item} path={path} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nList.propTypes = {\n  list: PropTypes.array.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default List;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  root: {\n    paddingTop: '100px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createAndUpdatePokeboard } from \"../../redux/user/actions\";\n\nimport List from \"../../components/list\";\nimport Loader from \"../../components/loader\";\nimport { Container, Typography, Grow, Grid } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n\nconst Pokeboard = (props) => {\n  const classes = useStyles();\n  const loading = useSelector((state) => state.user.loading);\n  const pokeboard = useSelector((state) => state.user.pokeboard);\n  const dispatch = useDispatch();\n  const path = props.match.path;\n\n  useEffect(() => {\n    dispatch(createAndUpdatePokeboard());\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\" align=\"center\">\n        Your collection\n      </Typography>\n      {pokeboard.pokemons.length === 0 ? (\n        <Typography variant=\"h5\" align=\"center\">\n          is empty. Please go back and start add pokemons to your pokeboard!\n        </Typography>\n      ) : (\n        <Grow in>\n          <Container>\n            <Grid\n              container\n              justify=\"space-between\"\n              alignItems=\"stretch\"\n              spacing={3}\n            >\n              <Grid item xs={12} sm={12}>\n                <List list={pokeboard.pokemons} path={path} />\n              </Grid>\n            </Grid>\n          </Container>\n        </Grow>\n      )}\n    </div>\n  );\n};\n\nexport default Pokeboard;\n"],"sourceRoot":""}