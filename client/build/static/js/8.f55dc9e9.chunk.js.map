{"version":3,"sources":["redux/user/actions.js","components/card/styles.js","components/card/index.js","components/list/styles.js","components/list/index.js","../node_modules/@material-ui/icons/Search.js","pages/pokemons/styles.js","pages/pokemons/index.js","redux/pokemons/actions.js","utils/helpers.js"],"names":["createAndUpdatePokeboard","dispatch","a","axios","post","process","response","type","CREATE_AND_UPDATE_POKEBOARD_SUCCESS","payload","data","errors","forEach","error","setAlert","msg","CREATE_AND_UPDATE_POKEBOARD_FAIL","addPokemon","pokemon","config","headers","body","JSON","stringify","put","ADD_POKEMON_SUCCESS","ADD_POKEMON_FAIL","deletePokemon","pokemonId","delete","DELETE_POKEMON_SUCCESS","DELETE_POKEMON_FAIL","getPokemon","get","GET_POKEMON_SUCCESS","GET_POKEMON_FAIL","makeStyles","root","maxWidth","media","margin","height","backgroundSize","cardAction","display","justifyContent","CardItem","props","classes","useStyles","item","_id","name","urlImage","useDispatch","Card","className","to","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","align","variant","component","CardActions","path","Fab","size","color","onClick","e","aria-label","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","List","list","length","Grid","container","map","index","xs","sm","md","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","paddingTop","flexDirection","search","width","padding","input","marginLeft","iconButton","Pokemons","pokemons","useSelector","state","loading","user","auth","match","useState","searchQuerry","setSearchQuerry","setSearchResults","useEffect","GET_ALL_POKEMONS_SUCCESS","GET_ALL_POKEMONS_FAIL","results","filter","toLowerCase","includes","console","log","split","s","charAt","toUpperCase","substring","join","InputBase","placeholder","onChange","target","IconButton","Container","justify"],"mappings":"wSAeaA,EAA2B,yDAAM,WAAOC,GAAP,iBAAAC,EAAA,+EAEnBC,IAAMC,KAAN,UAClBC,+BADkB,eAFmB,OAEpCC,EAFoC,OAK1CL,EAAS,CACPM,KAAMC,IACNC,QAASH,EAASI,OAPsB,iDAUpCC,EAAS,KAAML,SAASI,KAAKC,SAEjCA,EAAOC,SAAQ,SAACC,GAAD,OAAWZ,EAASa,YAASD,EAAME,IAAK,SAAS,OAElEd,EAAS,CACPM,KAAMS,MAfkC,yDAAN,uDAqB3BC,EAAa,SAACC,GAAD,8CAAa,WAAOjB,GAAP,qBAAAC,EAAA,6DAC/BiB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAGdC,EAAOC,KAAKC,UAAUL,GANS,kBAQZf,IAAMqB,IAAN,UAClBnB,+BADkB,uBAErBgB,EACAF,GAXiC,OAQ7Bb,EAR6B,OAanCL,EAAS,CACPM,KAAMkB,IACNhB,QAASH,EAASI,OAEpBT,EAASa,YAAS,8BAA+B,WAAW,IAjBzB,mDAmB7BH,EAAS,KAAML,SAASI,KAAKC,SAEjCA,EAAOC,SAAQ,SAACC,GAAD,OAAWZ,EAASa,YAASD,EAAME,IAAK,SAAS,OAElEd,EAAS,CACPM,KAAMmB,MAxB2B,0DAAb,uDA8BbC,EAAgB,SAACC,GAAD,8CAAe,WAAO3B,GAAP,iBAAAC,EAAA,+EAEjBC,IAAM0B,OAAN,UAClBxB,+BADkB,+BACkCuB,IAHjB,OAElCtB,EAFkC,OAKxCL,EAAS,CACPM,KAAMuB,IACNrB,QAASH,EAASI,OAEpBT,EAASa,YAAS,gCAAiC,WAAW,IATtB,iDAWlCH,EAAS,KAAML,SAASI,KAAKC,SAEjCA,EAAOC,SAAQ,SAACC,GAAD,OAAWZ,EAASa,YAASD,EAAME,IAAK,SAAS,OAElEd,EAAS,CACPM,KAAMwB,MAhBgC,yDAAf,uDAsBhBC,EAAa,SAACJ,GAAD,8CAAe,WAAO3B,GAAP,iBAAAC,EAAA,+EAEdC,IAAM8B,IAAN,UAClB5B,+BADkB,+BACkCuB,IAHpB,OAE/BtB,EAF+B,OAKrCL,EAAS,CACPM,KAAM2B,IACNzB,QAASH,EAASI,OAPiB,iDAU/BC,EAAS,KAAML,SAASI,KAAKC,SAEjCA,EAAOC,SAAQ,SAACC,GAAD,OAAWZ,EAASa,YAASD,EAAME,IAAK,SAAS,OAElEd,EAAS,CACPM,KAAM4B,MAf6B,yDAAf,wD,iMCtFXC,cAAW,CACxBC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,OACRC,OAAQ,IACRC,eAAgB,WAElBC,WAAY,CACVC,QAAS,OACTC,eAAgB,YCkELC,EA7DE,SAACC,GAChB,IAAMC,EAAUC,IADU,EAGMF,EAAMG,KAA9BC,EAHkB,EAGlBA,IAAKC,EAHa,EAGbA,KAAMC,EAHO,EAGPA,SAEbpD,EAAWqD,cAOjB,OACE,eAACC,EAAA,EAAD,CAAMC,UAAWR,EAAQX,KAAzB,UACE,cAAC,IAAD,CAAMoB,GAAE,mBAAcN,GAAtB,SACE,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWH,UAAWR,EAAQT,MAAOqB,MAAOP,IAC5C,eAACQ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,MAAM,SAASC,QAAQ,KAAKC,UAAU,KAA/D,SACGd,IAEH,cAACU,EAAA,EAAD,CACEC,cAAY,EACZE,QAAQ,QACRD,MAAM,SACNE,UAAU,IAJZ,iCAWN,cAACC,EAAA,EAAD,CAAaX,UAAWR,EAAQL,WAAhC,SACkB,cAAfI,EAAMqB,KACL,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,UACNC,QA/Be,SAACC,GACxBxE,EAASgB,YAAW8B,EAAMG,QA+BlBwB,aAAW,MAJb,SAME,cAAC,IAAD,MAGF,cAACL,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,YACNC,QArCkB,SAACC,GAC3BxE,EAAS0B,YAAcoB,EAAMG,QAqCrBwB,aAAW,MAJb,SAME,cAAC,IAAD,Y,QCjEGtC,eAAW,SAACuC,GAAD,MAAY,CACpCC,cAAe,CACbhC,QAAS,OACTiC,WAAY,UAEdC,SAAU,CACRtC,OAAQmC,EAAMI,QAAQ,IAExBC,UAAW,CACTC,UAAW,cCsBAC,IA1BF,SAACnC,GACZ,IAAMC,EAAUC,IACRmB,EAAerB,EAAfqB,KAAMe,EAASpC,EAAToC,KACd,OAAQA,EAAKC,OAGX,cAACC,EAAA,EAAD,CACE7B,UAAWR,EAAQsC,UACnBA,WAAS,EACTT,WAAW,UACXE,QAAS,EAJX,SAMGI,EAAKI,KAAI,SAACrC,EAAMsC,GAAP,OACR,cAACH,EAAA,EAAD,CAAkBnC,MAAI,EAACuC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA1C,SACE,cAAC,EAAD,CAAUzC,KAAMA,EAAMkB,KAAMA,KADnBoB,QATf,cAAC,IAAD,M,iCCTJ,IAAII,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,+OACD,UAEJN,EAAQE,QAAUE,G,uKCfHhE,cAAW,CACxBC,KAAM,CACJkE,WAAY,QACZ3D,QAAS,OACT4D,cAAe,SACf3B,WAAY,SACZhC,eAAgB,UAElB4D,OAAQ,CACNC,MAAO,OACPC,QAAS,QAEXC,MAAO,CACLC,WAAY,QAEdC,WAAY,CACVH,QAAS,U,+DCmEEI,UArEE,SAAChE,GAChB,IAAMC,EAAUC,IACV+D,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAASA,YACjDG,EAAUF,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAASG,WAChDC,EAAOH,aAAY,SAACC,GAAD,OAAWA,EAAMG,KAAKD,QACzCnH,EAAWqD,cACXc,EAAOrB,EAAMuE,MAAMlD,KANC,EAOcmD,mBAAS,IAPvB,mBAOnBC,EAPmB,KAOLC,EAPK,OAQgBF,mBAASP,GARzB,mBAQJU,GARI,WAU1BC,qBAAU,WACR1H,ECvB0B,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,+EAETC,IAAM8B,IAAN,UAClB5B,+BADkB,cAFS,OAE1BC,EAF0B,OAKhCL,EAAS,CACPM,KAAMqH,IACNnH,QAASH,EAASI,OAPY,iDAU1BC,EAAS,KAAML,SAASI,KAAKC,SAEjCA,EAAOC,SAAQ,SAACC,GAAD,OAAWZ,EAASa,YAASD,EAAME,IAAK,SAAS,OAElEd,EAAS,CACPM,KAAMsH,MAfwB,yDAAN,uDDwB1B5H,EAASD,eACT0H,EAAiBV,KAChB,IAEHW,qBAAU,WACR,IAAMG,EAAUd,EAASe,QAAO,SAAC7G,GAAD,OAC9BA,EAAQkC,KAAK4E,cAAcC,SAAST,MAEtCE,EAAiBI,KAChB,IAEH,IEvCyB1E,EF2CzB,OADA8E,QAAQC,IAAIX,GACRL,EACK,cAAC,IAAD,IAIP,sBAAK3D,UAAWR,EAAQX,KAAxB,UACE,eAACyB,EAAA,EAAD,CAAYG,QAAQ,KAAKD,MAAM,SAA/B,uBEjDqBZ,EFkDEgE,EAAKhE,KEjDhCA,EAAOA,EACJ4E,cACAI,MAAM,KACN7C,KAAI,SAAC8C,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,MACnDC,KAAK,SF+CJ,cAAC3E,EAAA,EAAD,CAAYG,QAAQ,QAAQD,MAAM,SAAlC,yGAIA,sBAAKR,UAAWR,EAAQyD,OAAxB,UACE,cAACiC,EAAA,EAAD,CACElF,UAAWR,EAAQ4D,MACnB+B,YAAY,kBACZ1E,QAAQ,WACR2E,SAtBa,SAACnE,GACpBgD,EAAgBhD,EAAEoE,OAAO5C,UAuBrB,cAAC6C,EAAA,EAAD,CAAYvI,KAAK,SAASiD,UAAWR,EAAQ8D,WAA7C,SACE,cAAC,IAAD,SAIJ,cAACiC,EAAA,EAAD,UACE,cAAC1D,EAAA,EAAD,CACEC,WAAS,EACT0D,QAAQ,gBACRnE,WAAW,UACXE,QAAS,EAJX,SAME,cAACM,EAAA,EAAD,CAAMnC,MAAI,EAACuC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,IAAD,CAAMP,KAAM6B,EAAU5C,KAAMA","file":"static/js/8.f55dc9e9.chunk.js","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './../alert/actions';\n\nimport {\n  CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n  CREATE_AND_UPDATE_POKEBOARD_FAIL,\n  ADD_POKEMON_SUCCESS,\n  ADD_POKEMON_FAIL,\n  DELETE_POKEMON_SUCCESS,\n  DELETE_POKEMON_FAIL,\n  GET_POKEMON_SUCCESS,\n  GET_POKEMON_FAIL,\n} from './types';\n\n// Create & update user pokeboard.\nexport const createAndUpdatePokeboard = () => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${process.env.REACT_APP_API_URL}/pokeboard`\n    );\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_FAIL,\n    });\n  }\n};\n\n// Add pokemon to user pokeboard.\nexport const addPokemon = (pokemon) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify(pokemon);\n  try {\n    const response = await axios.put(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons`,\n      body,\n      config\n    );\n    dispatch({\n      type: ADD_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully added!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: ADD_POKEMON_FAIL,\n    });\n  }\n};\n\n// Delete pokemon from user pokeboard.\nexport const deletePokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.delete(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: DELETE_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully deleted!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: DELETE_POKEMON_FAIL,\n    });\n  }\n};\n\n// Get pokemon details.\nexport const getPokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: GET_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: GET_POKEMON_FAIL,\n    });\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    margin: '20px',\n    height: 140,\n    backgroundSize: 'contain',\n  },\n  cardAction: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addPokemon, deletePokemon } from '../../redux/user/actions';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport useStyles from './styles';\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n\n  const { _id, name, urlImage } = props.item;\n\n  const dispatch = useDispatch();\n  const handleAddPokemon = (e) => {\n    dispatch(addPokemon(props.item));\n  };\n  const handleDeletePokemon = (e) => {\n    dispatch(deletePokemon(props.item));\n  };\n  return (\n    <Card className={classes.root}>\n      <Link to={`/pokemon/${_id}`}>\n        <CardActionArea>\n          <CardMedia className={classes.media} image={urlImage} />\n          <CardContent>\n            <Typography gutterBottom align=\"center\" variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Typography\n              gutterBottom\n              variant=\"body1\"\n              align=\"center\"\n              component=\"p\"\n            >\n              See details\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Link>\n      <CardActions className={classes.cardAction}>\n        {props.path === '/pokemons' ? (\n          <Fab\n            size=\"medium\"\n            color=\"primary\"\n            onClick={handleAddPokemon}\n            aria-label=\"add\"\n          >\n            <AddIcon />\n          </Fab>\n        ) : (\n          <Fab\n            size=\"medium\"\n            color=\"secondary\"\n            onClick={handleDeletePokemon}\n            aria-label=\"add\"\n          >\n            <DeleteIcon />\n          </Fab>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nCardItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default CardItem;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CardItem from '../card';\nimport Loader from '../loader';\nimport useStyles from './styles';\n\nconst List = (props) => {\n  const classes = useStyles();\n  const { path, list } = props;\n  return !list.length ? (\n    <Loader />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {list.map((item, index) => (\n        <Grid key={index} item xs={12} sm={6} md={3}>\n          <CardItem item={item} path={path} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nList.propTypes = {\n  list: PropTypes.array.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default List;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  root: {\n    paddingTop: '100px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  search: {\n    width: 'auto',\n    padding: '20px',\n  },\n  input: {\n    marginLeft: '10px',\n  },\n  iconButton: {\n    padding: '10px',\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllPokemons } from '../../redux/pokemons/actions';\nimport { createAndUpdatePokeboard } from '../../redux/user/actions';\nimport { capitalize } from '../../utils/helpers';\n\nimport List from '../../components/list';\nimport Loader from '../../components/loader';\n\nimport useStyles from './styles';\nimport { Container, Typography, Grow, Grid } from '@material-ui/core';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst Pokemons = (props) => {\n  const classes = useStyles();\n  const pokemons = useSelector((state) => state.pokemons.pokemons);\n  const loading = useSelector((state) => state.pokemons.loading);\n  const user = useSelector((state) => state.auth.user);\n  const dispatch = useDispatch();\n  const path = props.match.path;\n  const [searchQuerry, setSearchQuerry] = useState('');\n  const [searchResults, setSearchResults] = useState(pokemons);\n\n  useEffect(() => {\n    dispatch(getAllPokemons());\n    dispatch(createAndUpdatePokeboard());\n    setSearchResults(pokemons);\n  }, []);\n\n  useEffect(() => {\n    const results = pokemons.filter((pokemon) =>\n      pokemon.name.toLowerCase().includes(searchQuerry)\n    );\n    setSearchResults(results);\n  }, []);\n\n  const handleSearch = (e) => {\n    setSearchQuerry(e.target.value);\n  };\n  console.log(searchQuerry);\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\" align=\"center\">\n        Wellcome {capitalize(user.name)}\n      </Typography>\n      <Typography variant=\"body1\" align=\"center\">\n        Now you can start choosing your favorite pokemons and add them to your\n        personal collection.\n      </Typography>\n      <div className={classes.search}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search pokemons\"\n          variant=\"outlined\"\n          onChange={handleSearch}\n        />\n        <IconButton type=\"submit\" className={classes.iconButton}>\n          <SearchIcon />\n        </IconButton>\n      </div>\n      {/* <Grow in> */}\n      <Container>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12} sm={12}>\n            <List list={pokemons} path={path} />\n          </Grid>\n        </Grid>\n      </Container>\n      {/* </Grow> */}\n    </div>\n  );\n};\n\nexport default Pokemons;\n","import axios from 'axios';\nimport { setAlert } from './../alert/actions';\nimport { GET_ALL_POKEMONS_SUCCESS, GET_ALL_POKEMONS_FAIL } from './types';\n\nexport const getAllPokemons = () => async (dispatch) => {\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/pokemons`\n    );\n    dispatch({\n      type: GET_ALL_POKEMONS_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: GET_ALL_POKEMONS_FAIL,\n    });\n  }\n};\n","export const capitalize = (name) => {\n  name = name\n    .toLowerCase()\n    .split(' ')\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n    .join(' ');\n  return name;\n};\n"],"sourceRoot":""}