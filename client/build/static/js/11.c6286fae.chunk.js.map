{"version":3,"sources":["pages/login/styles.js","pages/login/index.js"],"names":["makeStyles","root","width","height","display","flexDirection","alignItems","justifyContent","padding","form","marginTop","input","margin","logo","paddingTop","redirect","textField","Login","classes","useStyles","isAuthenticated","useSelector","state","auth","dispatch","useDispatch","useState","email","password","postData","setPostData","showPassword","setShowPassword","handleSubmit","e","a","preventDefault","credentials","login","handleChange","target","name","value","to","className","src","Logo","alt","Typography","variant","autoComplete","noValidate","onSubmit","TextField","label","fullWidth","onChange","FormControl","clsx","InputLabel","htmlFor","OutlinedInput","id","type","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","event","edge","labelWidth","component","Button","buttonSubmit","color","size","link"],"mappings":"oNAEeA,cAAW,CACxBC,KAAM,CACJC,MAAO,QACPC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,eAChBC,QAAS,UAEXC,KAAM,CACJP,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,eAChBC,QAAS,OACTE,UAAW,QAEbC,MAAO,CACLC,OAAQ,UAEVC,KAAM,CACJX,MAAO,OACPC,OAAQ,OACRW,WAAY,SACZF,OAAQ,iBAEVG,SAAU,CACRX,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAElBS,UAAW,CACTJ,OAAQ,Y,2HCuGGK,UAzHD,WACZ,IAAMC,EAAUC,IACVC,EAAkBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,mBACpDI,EAAWC,cAHC,EAIcC,mBAAS,CACvCC,MAAO,GACPC,SAAU,KANM,mBAIXC,EAJW,KAIDC,EAJC,OASsBJ,oBAAS,GAT/B,mBASXK,EATW,KASGC,EATH,KAWZC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDACnBD,EAAEE,iBACIC,EAAc,CAClBV,QACAC,YAEFJ,EAASc,YAAMD,IACfP,EAAY,CACVH,MAAO,GACPC,SAAU,KATO,2CAAH,sDAaZW,EAAe,SAACL,GACpBJ,EAAY,2BACPD,GADM,kBAERK,EAAEM,OAAOC,KAAOP,EAAEM,OAAOE,UAYtBf,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAGf,OAAIR,EACK,cAAC,IAAD,CAAUuB,GAAG,cAGpB,sBAAKC,UAAW1B,EAAQjB,KAAxB,UACE,qBAAK2C,UAAW1B,EAAQL,KAAMgC,IAAKC,IAAMC,IAAI,SAC7C,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,uBACEC,aAAa,MACbC,YAAU,EACVP,UAAW1B,EAAQT,KACnB2C,SAAUnB,EAJZ,UAME,gCACE,cAACoB,EAAA,EAAD,CACET,UAAW1B,EAAQP,MACnB8B,KAAK,QACLQ,QAAQ,WACRK,MAAM,QACNC,WAAS,EACTb,MAAOf,EACP6B,SAAU,SAACtB,GAAD,OAAOK,EAAaL,MAEhC,eAACuB,EAAA,EAAD,CACEb,UAAWc,YAAKxC,EAAQN,OAAQM,EAAQF,WACxCiC,QAAQ,WACRM,WAAS,EAHX,UAKE,cAACI,EAAA,EAAD,CAAYC,QAAQ,8BAApB,sBAGA,cAACC,EAAA,EAAD,CACEC,GAAG,8BACHC,KAAMhC,EAAe,OAAS,WAC9BU,KAAK,WACLC,MAAOd,EACP4B,SAAU,SAACtB,GAAD,OAAOK,EAAaL,IAC9B8B,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CACEC,aAAW,6BACXC,QApDc,WAC9BrC,GAAiBD,IAoDDuC,YAjDc,SAACC,GAC/BA,EAAMnC,kBAiDUoC,KAAK,MAJP,SAMGzC,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAIvC0C,WAAY,WAIlB,cAACzB,EAAA,EAAD,CAAYC,QAAQ,IAAIyB,UAAU,IAAlC,sCAGA,cAACC,EAAA,EAAD,CACE/B,UAAW1B,EAAQ0D,aACnB3B,QAAQ,YACR4B,MAAM,UACNC,KAAK,QACLf,KAAK,SACLR,WAAS,EANX,mBAUA,sBAAKX,UAAW1B,EAAQH,SAAxB,UACE,cAACiC,EAAA,EAAD,CAAYC,QAAQ,IAAIyB,UAAU,IAAlC,gCAGA,cAAC,IAAD,CAAM9B,UAAW1B,EAAQ6D,KAAMpC,GAAG,YAAlC","file":"static/js/11.c6286fae.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  root: {\n    width: '100vw',\n    height: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: '10px 0',\n  },\n  form: {\n    width: '350px',\n    height: '500px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: '10px',\n    marginTop: '20px',\n  },\n  input: {\n    margin: '10px 0',\n  },\n  logo: {\n    width: '60px',\n    height: 'auto',\n    paddingTop: '20px 0',\n    margin: '20px 0 10px 0',\n  },\n  redirect: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  textField: {\n    margin: '10px 0',\n  },\n});\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/auth/actions';\nimport { Link, Redirect } from 'react-router-dom';\n\n// Styles\nimport useStyles from './styles';\nimport clsx from 'clsx';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Logo from '../../assets/images/pikachu.svg';\n\nconst Login = () => {\n  const classes = useStyles();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const dispatch = useDispatch();\n  const [postData, setPostData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const credentials = {\n      email,\n      password,\n    };\n    dispatch(login(credentials));\n    setPostData({\n      email: '',\n      password: '',\n    });\n  };\n\n  const handleChange = (e) => {\n    setPostData({\n      ...postData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const { email, password } = postData;\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to=\"/pokemons\" />;\n  }\n  return (\n    <div className={classes.root}>\n      <img className={classes.logo} src={Logo} alt=\"logo\" />\n      <Typography variant=\"h6\">Wellcome to MyPoke</Typography>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={classes.form}\n        onSubmit={handleSubmit}\n      >\n        <div>\n          <TextField\n            className={classes.input}\n            name=\"email\"\n            variant=\"outlined\"\n            label=\"Email\"\n            fullWidth\n            value={email}\n            onChange={(e) => handleChange(e)}\n          />\n          <FormControl\n            className={clsx(classes.margin, classes.textField)}\n            variant=\"outlined\"\n            fullWidth\n          >\n            <InputLabel htmlFor=\"outlined-adornment-password\">\n              Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              value={password}\n              onChange={(e) => handleChange(e)}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n        </div>\n        <Typography variant=\"p\" component=\"p\">\n          Sign in for your account\n        </Typography>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Login\n        </Button>\n        <div className={classes.redirect}>\n          <Typography variant=\"p\" component=\"p\">\n            Need a new acount?\n          </Typography>\n          <Link className={classes.link} to=\"/register\">\n            Register your new account\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}