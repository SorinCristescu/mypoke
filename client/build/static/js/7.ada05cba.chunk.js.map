{"version":3,"sources":["redux/user/actions.js","components/card/styles.js","components/card/index.js","components/list/styles.js","components/list/index.js","pages/pokeboard/styles.js","pages/pokeboard/index.js"],"names":["createAndUpdatePokeboard","dispatch","a","axios","post","process","response","type","CREATE_AND_UPDATE_POKEBOARD_SUCCESS","payload","data","errors","forEach","error","setAlert","msg","CREATE_AND_UPDATE_POKEBOARD_FAIL","addPokemon","pokemon","config","headers","body","JSON","stringify","put","ADD_POKEMON_SUCCESS","ADD_POKEMON_FAIL","deletePokemon","pokemonId","delete","DELETE_POKEMON_SUCCESS","DELETE_POKEMON_FAIL","getPokemon","get","GET_POKEMON_SUCCESS","GET_POKEMON_FAIL","makeStyles","root","maxWidth","media","margin","height","backgroundSize","cardAction","display","justifyContent","CardItem","props","classes","useStyles","item","_id","name","urlImage","useDispatch","Grow","in","Card","className","to","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","align","variant","component","CardActions","path","Fab","size","color","onClick","e","aria-label","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","List","list","length","Grid","container","map","index","xs","sm","md","paddingTop","flexDirection","Pokeboard","loading","useSelector","state","user","pokeboard","match","useEffect","style","pokemons","Container","justify"],"mappings":"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","file":"static/js/7.ada05cba.chunk.js","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './../alert/actions';\n\nimport {\n  CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n  CREATE_AND_UPDATE_POKEBOARD_FAIL,\n  ADD_POKEMON_SUCCESS,\n  ADD_POKEMON_FAIL,\n  DELETE_POKEMON_SUCCESS,\n  DELETE_POKEMON_FAIL,\n  GET_POKEMON_SUCCESS,\n  GET_POKEMON_FAIL,\n} from './types';\n\n// Create & update user pokeboard.\nexport const createAndUpdatePokeboard = () => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${process.env.REACT_APP_API_URL}/pokeboard`\n    );\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_FAIL,\n    });\n  }\n};\n\n// Add pokemon to user pokeboard.\nexport const addPokemon = (pokemon) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify(pokemon);\n  try {\n    const response = await axios.put(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons`,\n      body,\n      config\n    );\n    dispatch({\n      type: ADD_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully added!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: ADD_POKEMON_FAIL,\n    });\n  }\n};\n\n// Delete pokemon from user pokeboard.\nexport const deletePokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.delete(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: DELETE_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully deleted!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: DELETE_POKEMON_FAIL,\n    });\n  }\n};\n\n// Get pokemon details.\nexport const getPokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: GET_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: GET_POKEMON_FAIL,\n    });\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    margin: '20px',\n    height: 140,\n    backgroundSize: 'contain',\n  },\n  cardAction: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addPokemon, deletePokemon } from \"../../redux/user/actions\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport useStyles from \"./styles\";\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n\n  const { _id, name, urlImage } = props.item;\n\n  const dispatch = useDispatch();\n  const handleAddPokemon = (e) => {\n    dispatch(addPokemon(props.item));\n  };\n  const handleDeletePokemon = (e) => {\n    dispatch(deletePokemon(props.item._id));\n  };\n  return (\n    <Grow in>\n      <Card className={classes.root}>\n        <Link to={`/pokemon/${_id}`}>\n          <CardActionArea>\n            <CardMedia className={classes.media} image={urlImage} />\n            <CardContent>\n              <Typography\n                gutterBottom\n                align=\"center\"\n                variant=\"h5\"\n                component=\"h2\"\n              >\n                {name}\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body1\"\n                align=\"center\"\n                component=\"p\"\n              >\n                See details\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Link>\n        <CardActions className={classes.cardAction}>\n          {props.path === \"/pokemons\" ? (\n            <Fab\n              size=\"medium\"\n              color=\"primary\"\n              onClick={handleAddPokemon}\n              aria-label=\"add\"\n            >\n              <AddIcon />\n            </Fab>\n          ) : (\n            <Fab\n              size=\"medium\"\n              color=\"secondary\"\n              onClick={handleDeletePokemon}\n              aria-label=\"add\"\n            >\n              <DeleteIcon />\n            </Fab>\n          )}\n        </CardActions>\n      </Card>\n    </Grow>\n  );\n};\n\nCardItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default CardItem;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CardItem from '../card';\nimport Loader from '../loader';\nimport useStyles from './styles';\n\nconst List = (props) => {\n  const classes = useStyles();\n  const { path, list } = props;\n  return !list.length ? (\n    <Loader />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {list.map((item, index) => (\n        <Grid key={index} item xs={12} sm={6} md={3}>\n          <CardItem item={item} path={path} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nList.propTypes = {\n  list: PropTypes.array.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default List;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  root: {\n    paddingTop: '100px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createAndUpdatePokeboard } from \"../../redux/user/actions\";\n\nimport List from \"../../components/list\";\nimport Loader from \"../../components/loader\";\nimport { Container, Typography, Grid } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n\nconst Pokeboard = (props) => {\n  const classes = useStyles();\n  const loading = useSelector((state) => state.user.loading);\n  const pokeboard = useSelector((state) => state.user.pokeboard);\n  const dispatch = useDispatch();\n  const path = props.match.path;\n\n  useEffect(() => {\n    dispatch(createAndUpdatePokeboard());\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\" align=\"center\" style={{ margin: \"20px\" }}>\n        Your collection\n      </Typography>\n      {pokeboard.pokemons.length === 0 ? (\n        <Typography variant=\"h5\" align=\"center\">\n          is empty. Please go back and start add pokemons to your pokeboard!\n        </Typography>\n      ) : (\n        <Container>\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} sm={12}>\n              <List list={pokeboard.pokemons} path={path} />\n            </Grid>\n          </Grid>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default Pokeboard;\n"],"sourceRoot":""}