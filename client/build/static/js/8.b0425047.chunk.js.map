{"version":3,"sources":["redux/user/actions.js","components/card/styles.js","components/card/index.js","components/pagination/styles.js","components/pagination/index.js","components/list/styles.js","components/list/index.js","pages/pokemons/styles.js","pages/pokemons/index.js","redux/pokemons/actions.js","utils/helpers.js"],"names":["createAndUpdatePokeboard","dispatch","a","axios","post","process","response","type","CREATE_AND_UPDATE_POKEBOARD_SUCCESS","payload","data","errors","forEach","error","setAlert","msg","CREATE_AND_UPDATE_POKEBOARD_FAIL","addPokemon","pokemon","config","headers","body","JSON","stringify","put","ADD_POKEMON_SUCCESS","ADD_POKEMON_FAIL","deletePokemon","pokemonId","delete","DELETE_POKEMON_SUCCESS","DELETE_POKEMON_FAIL","getPokemon","get","GET_POKEMON_SUCCESS","GET_POKEMON_FAIL","makeStyles","root","maxWidth","backgroundColor","media","margin","height","backgroundSize","cardAction","display","justifyContent","CardItem","props","classes","useStyles","item","_id","name","urlImage","useDispatch","Grow","in","Card","className","to","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","align","variant","component","CardActions","path","Fab","size","color","onClick","e","aria-label","wrapper","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","map","number","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","List","list","useState","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","length","Grid","container","index","xs","sm","md","pageNumber","paddingTop","flexDirection","search","width","padding","border","borderRadius","input","marginLeft","iconButton","Pokemons","pokemons","useSelector","state","loading","user","auth","match","searchQuerry","setSearchQuerry","useEffect","GET_ALL_POKEMONS_SUCCESS","GET_ALL_POKEMONS_FAIL","message","filteredPokemons","filter","toLowerCase","startsWith","split","s","charAt","toUpperCase","substring","join","InputBase","placeholder","onChange","target","value","Container","justify"],"mappings":"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","file":"static/js/8.b0425047.chunk.js","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './../alert/actions';\n\nimport {\n  CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n  CREATE_AND_UPDATE_POKEBOARD_FAIL,\n  ADD_POKEMON_SUCCESS,\n  ADD_POKEMON_FAIL,\n  DELETE_POKEMON_SUCCESS,\n  DELETE_POKEMON_FAIL,\n  GET_POKEMON_SUCCESS,\n  GET_POKEMON_FAIL,\n} from './types';\n\n// Create & update user pokeboard.\nexport const createAndUpdatePokeboard = () => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${process.env.REACT_APP_API_URL}/pokeboard`\n    );\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_FAIL,\n    });\n  }\n};\n\n// Add pokemon to user pokeboard.\nexport const addPokemon = (pokemon) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify(pokemon);\n  try {\n    const response = await axios.put(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons`,\n      body,\n      config\n    );\n    dispatch({\n      type: ADD_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully added!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: ADD_POKEMON_FAIL,\n    });\n  }\n};\n\n// Delete pokemon from user pokeboard.\nexport const deletePokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.delete(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: DELETE_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully deleted!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: DELETE_POKEMON_FAIL,\n    });\n  }\n};\n\n// Get pokemon details.\nexport const getPokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: GET_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: GET_POKEMON_FAIL,\n    });\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  root: {\n    maxWidth: 345,\n    backgroundColor: \"#ffffff\",\n  },\n  media: {\n    margin: \"20px\",\n    height: 140,\n    backgroundSize: \"contain\",\n  },\n  cardAction: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addPokemon, deletePokemon } from \"../../redux/user/actions\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport useStyles from \"./styles\";\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n\n  const { _id, name, urlImage } = props.item;\n\n  const dispatch = useDispatch();\n  const handleAddPokemon = (e) => {\n    dispatch(addPokemon(props.item));\n  };\n  const handleDeletePokemon = (e) => {\n    dispatch(deletePokemon(props.item._id));\n  };\n  return (\n    <Grow in>\n      <Card className={classes.root}>\n        <Link to={`/pokemon/${_id}`}>\n          <CardActionArea>\n            <CardMedia className={classes.media} image={urlImage} />\n            <CardContent>\n              <Typography\n                gutterBottom\n                align=\"center\"\n                variant=\"h5\"\n                component=\"h2\"\n              >\n                {name}\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body1\"\n                align=\"center\"\n                component=\"p\"\n              >\n                See details\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Link>\n        <CardActions className={classes.cardAction}>\n          {props.path === \"/pokemons\" ? (\n            <Fab\n              size=\"large\"\n              color=\"primary\"\n              onClick={handleAddPokemon}\n              aria-label=\"add\"\n            >\n              <AddIcon />\n            </Fab>\n          ) : (\n            <Fab\n              size=\"large\"\n              color=\"secondary\"\n              onClick={handleDeletePokemon}\n              aria-label=\"add\"\n            >\n              <DeleteIcon />\n            </Fab>\n          )}\n        </CardActions>\n      </Card>\n    </Grow>\n  );\n};\n\nCardItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default CardItem;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  root: {\n    margin: \"6px\",\n  },\n  wrapper: {\n    margin: \"20px 0\",\n  },\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport useStyles from \"./styles\";\n\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\n  const classes = useStyles();\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <div className={classes.wrapper}>\n      {pageNumbers.map((number) => (\n        <Fab\n          className={classes.root}\n          size=\"small\"\n          color=\"secondary\"\n          key={number}\n          onClick={() => paginate(number)}\n        >\n          {number}\n        </Fab>\n      ))}\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  itemsPerPage: PropTypes.number.isRequired,\n  totalItems: PropTypes.number.isRequired,\n  paginate: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardItem from \"../card\";\nimport Loader from \"../loader\";\nimport Pagination from \"../pagination\";\nimport useStyles from \"./styles\";\n\nconst List = (props) => {\n  const classes = useStyles();\n  const { path, list } = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(20);\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = list.slice(indexOfFirstItem, indexOfLastItem);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return !list.length ? (\n    <Loader />\n  ) : (\n    <>\n      <Grid\n        className={classes.container}\n        container\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        {currentItems.map((item, index) => (\n          <Grid key={index} item xs={12} sm={6} md={3}>\n            <CardItem item={item} path={path} />\n          </Grid>\n        ))}\n      </Grid>\n      <Pagination\n        itemsPerPage={itemsPerPage}\n        totalItems={list.length}\n        paginate={paginate}\n      />\n    </>\n  );\n};\n\nList.propTypes = {\n  list: PropTypes.array.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default List;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  root: {\n    paddingTop: \"100px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  search: {\n    width: \"300px\",\n    height: \"40px\",\n    padding: \"10px\",\n    margin: \"20px 0 \",\n    border: \"1px solid #D2D0D0\",\n    borderRadius: \"5px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  input: {\n    marginLeft: \"10px\",\n  },\n  iconButton: {\n    padding: \"10px\",\n  },\n\n  // search: {\n  //   position: \"relative\",\n  //   borderRadius: \"1px solid #000000\",\n  //   backgroundColor: \"#ffffff\",\n  //   marginRight: \"10px\",\n  //   marginLeft: 0,\n  //   width: \"100%\",\n  // },\n  // searchIcon: {\n  //   padding: \"0 10px\",\n  //   height: \"100%\",\n  //   position: \"absolute\",\n  //   pointerEvents: \"none\",\n  //   display: \"flex\",\n  //   alignItems: \"center\",\n  //   justifyContent: \"center\",\n  // },\n  // inputRoot: {\n  //   color: \"inherit\",\n  // },\n  // inputInput: {\n  //   padding: \"10 10 10 0\",\n  //   // vertical padding + font size from searchIcon\n  //   paddingLeft: `calc(1em + '10px')`,\n\n  //   width: \"100%\",\n  // },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllPokemons } from \"../../redux/pokemons/actions\";\nimport { createAndUpdatePokeboard } from \"../../redux/user/actions\";\nimport { capitalize } from \"../../utils/helpers\";\n\nimport List from \"../../components/list\";\nimport Loader from \"../../components/loader\";\n\nimport useStyles from \"./styles\";\nimport { Container, Typography, Grow, Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst Pokemons = (props) => {\n  const classes = useStyles();\n  const pokemons = useSelector((state) => state.pokemons.pokemons);\n  const loading = useSelector((state) => state.pokemons.loading);\n  const user = useSelector((state) => state.auth.user);\n  const dispatch = useDispatch();\n  const path = props.match.path;\n  const [searchQuerry, setSearchQuerry] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(getAllPokemons());\n    dispatch(createAndUpdatePokeboard());\n  }, []);\n\n  const handleSearch = (e) => {\n    setSearchQuerry(e.target.value);\n  };\n\n  if (loading) {\n    return <Loader message=\"Pokemons will apear in few seconds...\" />;\n  }\n  let filteredPokemons = pokemons.filter((pokemon) =>\n    pokemon.name.toLowerCase().startsWith(searchQuerry.toLowerCase())\n  );\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\" align=\"center\">\n        Wellcome {capitalize(user.name)}\n      </Typography>\n      <Typography variant=\"body1\" align=\"center\">\n        Now you can start choosing your favorite pokemons and add them to your\n        personal collection.\n      </Typography>\n      <div className={classes.search}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search pokemons...\"\n          onChange={handleSearch}\n          value={searchQuerry}\n        />\n        <SearchIcon />\n      </div>\n      <Container>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12} sm={12}>\n            <List list={filteredPokemons} path={path} />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Pokemons;\n","import axios from 'axios';\nimport { setAlert } from './../alert/actions';\nimport { GET_ALL_POKEMONS_SUCCESS, GET_ALL_POKEMONS_FAIL } from './types';\n\nexport const getAllPokemons = () => async (dispatch) => {\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/pokemons`\n    );\n    dispatch({\n      type: GET_ALL_POKEMONS_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: GET_ALL_POKEMONS_FAIL,\n    });\n  }\n};\n","export const capitalize = (name) => {\n  name = name\n    .toLowerCase()\n    .split(' ')\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n    .join(' ');\n  return name;\n};\n"],"sourceRoot":""}