{"version":3,"sources":["redux/user/actions.js","components/chart/index.js","pages/pokemon/styles.js","pages/pokemon/index.js"],"names":["createAndUpdatePokeboard","dispatch","a","axios","post","process","response","type","CREATE_AND_UPDATE_POKEBOARD_SUCCESS","payload","data","errors","forEach","error","setAlert","msg","CREATE_AND_UPDATE_POKEBOARD_FAIL","addPokemon","pokemon","config","headers","body","JSON","stringify","put","ADD_POKEMON_SUCCESS","ADD_POKEMON_FAIL","deletePokemon","pokemonId","delete","DELETE_POKEMON_SUCCESS","DELETE_POKEMON_FAIL","getPokemon","get","GET_POKEMON_SUCCESS","GET_POKEMON_FAIL","Chart","labels","datasets","dataSet","backgroundColor","borderColor","borderWidth","width","height","options","legend","display","scales","yAxes","ticks","beginAtZero","gridLines","offsetGridLines","xAxes","makeStyles","wrapper","alignItems","justifyContent","paper","marginTop","margin","flexDirection","padding","gridItem","chips","chip","image","Pokemon","props","classes","useStyles","useDispatch","loaded","useSelector","state","user","id","match","params","useEffect","base","urlImage","name","HP","Attack","Defense","SpAttack","SpDefense","Speed","Grow","in","className","Paper","Grid","wrap","container","spacing","direction","justify","item","xs","sm","md","lg","src","alt","Typography","variant","align","map","index","Chip","color","size","label"],"mappings":"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","file":"static/js/10.beff4a8c.chunk.js","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './../alert/actions';\n\nimport {\n  CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n  CREATE_AND_UPDATE_POKEBOARD_FAIL,\n  ADD_POKEMON_SUCCESS,\n  ADD_POKEMON_FAIL,\n  DELETE_POKEMON_SUCCESS,\n  DELETE_POKEMON_FAIL,\n  GET_POKEMON_SUCCESS,\n  GET_POKEMON_FAIL,\n} from './types';\n\n// Create & update user pokeboard.\nexport const createAndUpdatePokeboard = () => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${process.env.REACT_APP_API_URL}/pokeboard`\n    );\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: CREATE_AND_UPDATE_POKEBOARD_FAIL,\n    });\n  }\n};\n\n// Add pokemon to user pokeboard.\nexport const addPokemon = (pokemon) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const body = JSON.stringify(pokemon);\n  try {\n    const response = await axios.put(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons`,\n      body,\n      config\n    );\n    dispatch({\n      type: ADD_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully added!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: ADD_POKEMON_FAIL,\n    });\n  }\n};\n\n// Delete pokemon from user pokeboard.\nexport const deletePokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.delete(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: DELETE_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n    dispatch(setAlert('Pokemon successfully deleted!', 'success', true));\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: DELETE_POKEMON_FAIL,\n    });\n  }\n};\n\n// Get pokemon details.\nexport const getPokemon = (pokemonId) => async (dispatch) => {\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/pokeboard/pokemons/${pokemonId}`\n    );\n    dispatch({\n      type: GET_POKEMON_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error', true)));\n    }\n    dispatch({\n      type: GET_POKEMON_FAIL,\n    });\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { HorizontalBar } from \"react-chartjs-2\";\n\nconst Chart = ({ dataSet }) => {\n  const data = {\n    labels: [\n      \"HP\",\n      \"Attack\",\n      \"Defense\",\n      \"Speed Attack\",\n      \"Speed Defense\",\n      \"Speed\",\n    ],\n    datasets: [\n      {\n        data: dataSet,\n        backgroundColor: [\n          \"rgb(153, 102, 255)\",\n          \"rgb(255, 99, 132)\",\n          \"rgb(54, 162, 235)\",\n          \"rgb(255, 206, 86)\",\n          \"rgb(75, 192, 192)\",\n          \"rgb(255, 159, 64)\",\n        ],\n        borderColor: [\n          \"rgb(153, 102, 255)\",\n          \"rgb(255, 99, 132)\",\n          \"rgb(54, 162, 235)\",\n          \"rgb(255, 206, 86)\",\n          \"rgb(75, 192, 192)\",\n          \"rgb(255, 159, 64)\",\n        ],\n        borderWidth: 0,\n      },\n    ],\n  };\n  const options = {\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n          gridLines: {\n            display: false,\n            offsetGridLines: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <HorizontalBar width={100} height={100} data={data} options={options} />\n  );\n};\n\nChart.propTypes = {\n  dataSet: PropTypes.array.isRequired,\n};\n\nexport default Chart;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  wrapper: {\n    height: \"100vh\",\n\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    width: \"80vw\",\n    marginTop: \"100px\",\n    height: \"80vh\",\n    margin: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"10%\",\n  },\n  // grid: {\n  //   width: '60%',\n  //   height: '60%',\n  // },\n  gridItem: {\n    padding: \"20px\",\n  },\n  chips: {\n    padding: \"20px\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  chip: {\n    margin: \"10px\",\n  },\n  image: {\n    width: \"80%\",\n    height: \"auto\",\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPokemon } from \"../../redux/user/actions\";\n\n// Components\nimport Chart from \"../../components/chart\";\nimport Loader from \"../../components/loader\";\n\n// Styles\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grow from \"@material-ui/core/Grow\";\n\nconst Pokemon = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const loaded = useSelector((state) => state.user.loaded);\n  const pokemon = useSelector((state) => state.user.pokemon);\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    dispatch(getPokemon(id));\n  }, [id]);\n\n  if (loaded) {\n    const { base, type, urlImage, name } = pokemon;\n    const { HP, Attack, Defense, SpAttack, SpDefense, Speed } = base;\n    const dataSet = [HP, Attack, Defense, SpAttack, SpDefense, Speed];\n    return (\n      <Grow in>\n        <div className={classes.wrapper}>\n          <Paper className={classes.paper}>\n            <Grid\n              wrap\n              container\n              spacing={0}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={6}\n                lg={6}\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.gridItem}\n              >\n                <img src={urlImage} alt=\"pokemon\" className={classes.image} />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={6}\n                lg={6}\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.gridItem}\n              >\n                <Typography variant=\"h4\" align=\"center\">\n                  {name}\n                </Typography>\n                <div className={classes.chips}>\n                  <Typography variant=\"h6\" align=\"center\">\n                    Skills:\n                  </Typography>\n                  {type &&\n                    type.map((chip, index) => (\n                      <Chip\n                        key={index}\n                        className={classes.chip}\n                        color=\"primary\"\n                        size=\"small\"\n                        label={chip}\n                      />\n                    ))}\n                </div>\n                <Chart dataSet={dataSet} />\n              </Grid>\n            </Grid>\n          </Paper>\n        </div>\n      </Grow>\n    );\n  } else {\n    return <Loader />;\n  }\n};\n\nexport default Pokemon;\n"],"sourceRoot":""}